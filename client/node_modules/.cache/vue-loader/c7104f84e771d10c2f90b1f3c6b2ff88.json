{"remainingRequest":"C:\\Users\\Administrator\\Desktop\\django-vue-admin3333\\client\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Administrator\\Desktop\\django-vue-admin3333\\client\\src\\views\\system\\role.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\Administrator\\Desktop\\django-vue-admin3333\\client\\src\\views\\system\\role.vue","mtime":1620834720964},{"path":"C:\\Users\\Administrator\\Desktop\\django-vue-admin3333\\client\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Administrator\\Desktop\\django-vue-admin3333\\client\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"C:\\Users\\Administrator\\Desktop\\django-vue-admin3333\\client\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Administrator\\Desktop\\django-vue-admin3333\\client\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { genTree, deepClone } from '@/utils'\nimport checkPermission from '@/utils/permission'\nimport {\n  getRoutes,\n  getRoleAll,\n  createRole,\n  deleteRole,\n  updateRole\n} from '@/api/role'\nimport { getOrgAll } from '@/api/org'\n\nconst defaultRole = {\n  id: '',\n  name: '',\n  description: '',\n  perms: [],\n  datas: '本级及以下',\n  depts: []\n}\n\nexport default {\n  data() {\n    return {\n      search: '',\n      role: Object.assign({}, defaultRole),\n      routes: [],\n      tableData: [],\n      rolesList: [],\n      dialogVisible: false,\n      dialogType: 'new',\n      checkStrictly: true,\n      listLoading: true,\n      orgData: [],\n      dataOptions: [\n        {\n          value: '全部',\n          label: '全部'\n        },\n        {\n          value: '自定义',\n          label: '自定义'\n        },\n        {\n          value: '同级及以下',\n          label: '同级及以下'\n        },\n        {\n          value: '本级及以下',\n          label: '本级及以下'\n        },\n        {\n          value: '本级',\n          label: '本级'\n        },\n        {\n          value: '仅本人',\n          label: '仅本人'\n        }\n      ]\n    }\n  },\n  computed: {},\n  created() {\n    // Mock: get all routes and roles list from server\n    this.getRoutes()\n    this.getOrgAll()\n    this.getRoleAll()\n  },\n  methods: {\n    checkPermission,\n    handleFilter() {\n      const newData = this.rolesList.filter(\n        data =>\n          !this.search ||\n          data.name.toLowerCase().includes(this.search.toLowerCase())\n      )\n      this.tableData = genTree(newData)\n    },\n    async getRoutes() {\n      const res = await getRoutes()\n      // this.serviceRoutes = res.data\n      this.routes = genTree(res.data)\n    },\n    async getOrgAll() {\n      const res = await getOrgAll()\n      this.orgData = genTree(res.data)\n    },\n    async getRoleAll() {\n      this.listLoading = true\n      const res = await getRoleAll()\n      this.tableData = res.data\n      this.rolesList = res.data\n      this.listLoading = false\n    },\n\n    handleAdd() {\n      this.role = Object.assign({}, defaultRole)\n      if (this.$refs.tree) {\n        this.$refs.tree.setCheckedNodes([])\n      }\n      this.dialogType = 'new'\n      this.dialogVisible = true\n    },\n    handleEdit(scope) {\n      this.dialogType = 'edit'\n      this.dialogVisible = true\n      this.role = deepClone(scope.row)\n      this.$nextTick(() => {\n        this.$refs.tree.setCheckedKeys(this.role.perms)\n        this.$refs.depts_tree.setCheckedKeys(this.role.depts)\n      })\n    },\n    handleDelete({ $index, row }) {\n      this.$confirm('确认删除?', '警告', {\n        confirmButtonText: '确认',\n        cancelButtonText: '取消',\n        type: 'warning'\n      })\n        .then(async() => {\n          await deleteRole(row.id)\n          this.tableData.splice($index, 1)\n          this.$message({\n            type: 'success',\n            message: '成功删除!'\n          })\n        })\n        .catch(err => {\n          console.error(err)\n        })\n    },\n\n    async confirmRole() {\n      const isEdit = this.dialogType === 'edit'\n      this.role.perms = this.$refs.tree.getCheckedKeys()\n      if (this.role.datas === '自定义') {\n        this.role.depts = this.$refs.depts_tree.getCheckedKeys()\n      } else {\n        this.role.depts = []\n      }\n\n      if (isEdit) {\n        await updateRole(this.role.id, this.role)\n        for (let index = 0; index < this.tableData.length; index++) {\n          if (this.tableData[index].id === this.role.id) {\n            this.tableData.splice(index, 1, Object.assign({}, this.role))\n            break\n          }\n        }\n      } else {\n        this.role.perms = this.$refs.tree.getCheckedKeys()\n        // const { data } = await createRole(this.role)\n        await createRole(this.role)\n        this.getRoleAll()\n      }\n\n      const { description, name } = this.role\n      this.dialogVisible = false\n      this.$notify({\n        title: '成功',\n        dangerouslyUseHTMLString: true,\n        message: `\n            <div>角色名: ${name}</div>\n            <div>角色描述: ${description}</div>\n          `,\n        type: 'success'\n      })\n    }\n  }\n}\n",null]}