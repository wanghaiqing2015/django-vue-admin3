{"remainingRequest":"C:\\Users\\Administrator\\Desktop\\django-vue-admin3333\\client\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\Administrator\\Desktop\\django-vue-admin3333\\client\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\Administrator\\Desktop\\django-vue-admin3333\\client\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Administrator\\Desktop\\django-vue-admin3333\\client\\src\\views\\system\\role.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\Administrator\\Desktop\\django-vue-admin3333\\client\\src\\views\\system\\role.vue","mtime":1620834720964},{"path":"C:\\Users\\Administrator\\Desktop\\django-vue-admin3333\\client\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Administrator\\Desktop\\django-vue-admin3333\\client\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"C:\\Users\\Administrator\\Desktop\\django-vue-admin3333\\client\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Administrator\\Desktop\\django-vue-admin3333\\client\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\"use strict\";\n\nvar _interopRequireDefault = require(\"C:/Users/Administrator/Desktop/django-vue-admin3333/client/node_modules/@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nrequire(\"regenerator-runtime/runtime\");\n\nvar _asyncToGenerator2 = _interopRequireDefault(require(\"C:/Users/Administrator/Desktop/django-vue-admin3333/client/node_modules/@babel/runtime/helpers/asyncToGenerator\"));\n\nrequire(\"core-js/modules/es6.function.name\");\n\nrequire(\"core-js/modules/es7.array.includes\");\n\nrequire(\"core-js/modules/es6.string.includes\");\n\nrequire(\"core-js/modules/es6.regexp.search\");\n\nvar _utils = require(\"@/utils\");\n\nvar _permission = _interopRequireDefault(require(\"@/utils/permission\"));\n\nvar _role = require(\"@/api/role\");\n\nvar _org = require(\"@/api/org\");\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nvar defaultRole = {\n  id: '',\n  name: '',\n  description: '',\n  perms: [],\n  datas: '本级及以下',\n  depts: []\n};\nvar _default = {\n  data: function data() {\n    return {\n      search: '',\n      role: Object.assign({}, defaultRole),\n      routes: [],\n      tableData: [],\n      rolesList: [],\n      dialogVisible: false,\n      dialogType: 'new',\n      checkStrictly: true,\n      listLoading: true,\n      orgData: [],\n      dataOptions: [{\n        value: '全部',\n        label: '全部'\n      }, {\n        value: '自定义',\n        label: '自定义'\n      }, {\n        value: '同级及以下',\n        label: '同级及以下'\n      }, {\n        value: '本级及以下',\n        label: '本级及以下'\n      }, {\n        value: '本级',\n        label: '本级'\n      }, {\n        value: '仅本人',\n        label: '仅本人'\n      }]\n    };\n  },\n  computed: {},\n  created: function created() {\n    // Mock: get all routes and roles list from server\n    this.getRoutes();\n    this.getOrgAll();\n    this.getRoleAll();\n  },\n  methods: {\n    checkPermission: _permission.default,\n    handleFilter: function handleFilter() {\n      var _this = this;\n\n      var newData = this.rolesList.filter(function (data) {\n        return !_this.search || data.name.toLowerCase().includes(_this.search.toLowerCase());\n      });\n      this.tableData = (0, _utils.genTree)(newData);\n    },\n    getRoutes: function () {\n      var _getRoutes2 = (0, _asyncToGenerator2.default)( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n        var res;\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return (0, _role.getRoutes)();\n\n              case 2:\n                res = _context.sent;\n                // this.serviceRoutes = res.data\n                this.routes = (0, _utils.genTree)(res.data);\n\n              case 4:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function getRoutes() {\n        return _getRoutes2.apply(this, arguments);\n      }\n\n      return getRoutes;\n    }(),\n    getOrgAll: function () {\n      var _getOrgAll2 = (0, _asyncToGenerator2.default)( /*#__PURE__*/regeneratorRuntime.mark(function _callee2() {\n        var res;\n        return regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return (0, _org.getOrgAll)();\n\n              case 2:\n                res = _context2.sent;\n                this.orgData = (0, _utils.genTree)(res.data);\n\n              case 4:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function getOrgAll() {\n        return _getOrgAll2.apply(this, arguments);\n      }\n\n      return getOrgAll;\n    }(),\n    getRoleAll: function () {\n      var _getRoleAll2 = (0, _asyncToGenerator2.default)( /*#__PURE__*/regeneratorRuntime.mark(function _callee3() {\n        var res;\n        return regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                this.listLoading = true;\n                _context3.next = 3;\n                return (0, _role.getRoleAll)();\n\n              case 3:\n                res = _context3.sent;\n                this.tableData = res.data;\n                this.rolesList = res.data;\n                this.listLoading = false;\n\n              case 7:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function getRoleAll() {\n        return _getRoleAll2.apply(this, arguments);\n      }\n\n      return getRoleAll;\n    }(),\n    handleAdd: function handleAdd() {\n      this.role = Object.assign({}, defaultRole);\n\n      if (this.$refs.tree) {\n        this.$refs.tree.setCheckedNodes([]);\n      }\n\n      this.dialogType = 'new';\n      this.dialogVisible = true;\n    },\n    handleEdit: function handleEdit(scope) {\n      var _this2 = this;\n\n      this.dialogType = 'edit';\n      this.dialogVisible = true;\n      this.role = (0, _utils.deepClone)(scope.row);\n      this.$nextTick(function () {\n        _this2.$refs.tree.setCheckedKeys(_this2.role.perms);\n\n        _this2.$refs.depts_tree.setCheckedKeys(_this2.role.depts);\n      });\n    },\n    handleDelete: function handleDelete(_ref) {\n      var _this3 = this;\n\n      var $index = _ref.$index,\n          row = _ref.row;\n      this.$confirm('确认删除?', '警告', {\n        confirmButtonText: '确认',\n        cancelButtonText: '取消',\n        type: 'warning'\n      }).then( /*#__PURE__*/(0, _asyncToGenerator2.default)( /*#__PURE__*/regeneratorRuntime.mark(function _callee4() {\n        return regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                _context4.next = 2;\n                return (0, _role.deleteRole)(row.id);\n\n              case 2:\n                _this3.tableData.splice($index, 1);\n\n                _this3.$message({\n                  type: 'success',\n                  message: '成功删除!'\n                });\n\n              case 4:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4);\n      }))).catch(function (err) {\n        console.error(err);\n      });\n    },\n    confirmRole: function () {\n      var _confirmRole = (0, _asyncToGenerator2.default)( /*#__PURE__*/regeneratorRuntime.mark(function _callee5() {\n        var isEdit, index, _this$role, description, name;\n\n        return regeneratorRuntime.wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                isEdit = this.dialogType === 'edit';\n                this.role.perms = this.$refs.tree.getCheckedKeys();\n\n                if (this.role.datas === '自定义') {\n                  this.role.depts = this.$refs.depts_tree.getCheckedKeys();\n                } else {\n                  this.role.depts = [];\n                }\n\n                if (!isEdit) {\n                  _context5.next = 16;\n                  break;\n                }\n\n                _context5.next = 6;\n                return (0, _role.updateRole)(this.role.id, this.role);\n\n              case 6:\n                index = 0;\n\n              case 7:\n                if (!(index < this.tableData.length)) {\n                  _context5.next = 14;\n                  break;\n                }\n\n                if (!(this.tableData[index].id === this.role.id)) {\n                  _context5.next = 11;\n                  break;\n                }\n\n                this.tableData.splice(index, 1, Object.assign({}, this.role));\n                return _context5.abrupt(\"break\", 14);\n\n              case 11:\n                index++;\n                _context5.next = 7;\n                break;\n\n              case 14:\n                _context5.next = 20;\n                break;\n\n              case 16:\n                this.role.perms = this.$refs.tree.getCheckedKeys(); // const { data } = await createRole(this.role)\n\n                _context5.next = 19;\n                return (0, _role.createRole)(this.role);\n\n              case 19:\n                this.getRoleAll();\n\n              case 20:\n                _this$role = this.role, description = _this$role.description, name = _this$role.name;\n                this.dialogVisible = false;\n                this.$notify({\n                  title: '成功',\n                  dangerouslyUseHTMLString: true,\n                  message: \"\\n            <div>\\u89D2\\u8272\\u540D: \".concat(name, \"</div>\\n            <div>\\u89D2\\u8272\\u63CF\\u8FF0: \").concat(description, \"</div>\\n          \"),\n                  type: 'success'\n                });\n\n              case 23:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5, this);\n      }));\n\n      function confirmRole() {\n        return _confirmRole.apply(this, arguments);\n      }\n\n      return confirmRole;\n    }()\n  }\n};\nexports.default = _default;",null]}